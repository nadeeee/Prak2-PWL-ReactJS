{"ast":null,"code":"var _jsxFileName = \"/Users/auriga/cleanfolio-main/src/components/Contact/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { contact } from '../../portfolio';\nimport useStyles from \"./contact.jsx\";\nimport './Contact.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const classes = useStyles();\n  const [dataUser, setDataUser] = useState({\n    name: \"\",\n    email: \"\",\n    comment: \"\"\n  });\n  const [countComment, setCountComment] = useState();\n  const [users, setUsers] = useState([]);\n\n  const getUsers = async () => {\n    const response = await axios.get(\"http://localhost:8000/api/komentars\");\n    console.log(response.data);\n    setCountComment(response.data.length);\n    setUsers(response.data);\n    console.log(countComment);\n  };\n\n  const deleteUser = async id => {\n    try {\n      await axios.delete(`https://server-auliarahmanzulfi.herokuapp.com/users/${id}`);\n      getUsers();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const postComment = async e => {\n    e.preventDefault();\n\n    try {\n      if (dataUser.name.length === 0) dataUser.name = \"Anonymous\";\n      const response = await axios.post(\"http://localhost:8000/api/komentars\", dataUser);\n      console.log(response.data);\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.main,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.boxComment,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Leave a Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: postComment,\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.input,\n          type: \"text\",\n          placeholder: \"Name (Optional)\",\n          value: dataUser.name,\n          onChange: e => {\n            setDataUser({ ...dataUser,\n              name: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.input,\n          type: \"email\",\n          placeholder: \"Email\",\n          value: dataUser.email,\n          onChange: e => {\n            setDataUser({ ...dataUser,\n              email: e.target.value\n            });\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: classes.textarea,\n          placeholder: \"Message\",\n          value: dataUser.comment,\n          onChange: e => {\n            setDataUser({ ...dataUser,\n              comment: e.target.value\n            });\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: classes.button,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [countComment, \" Comments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.comment,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.commentUser,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.userInfo,\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: user.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this); // )\n};\n\n_s(Contact, \"Q7QO2R59UFao2JGPAXQiZDwZLjo=\", false, function () {\n  return [useStyles];\n});\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/auriga/cleanfolio-main/src/components/Contact/Contact.js"],"names":["React","useState","useEffect","axios","contact","useStyles","Contact","classes","dataUser","setDataUser","name","email","comment","countComment","setCountComment","users","setUsers","getUsers","response","get","console","log","data","length","deleteUser","id","delete","err","postComment","e","preventDefault","post","window","location","reload","main","boxComment","form","input","target","value","textarea","button","map","user","commentUser","userInfo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios'\nimport { contact, } from '../../portfolio'\nimport useStyles from \"./contact.jsx\";\nimport './Contact.css'\n\n\nconst Contact = () => {\n\n  const classes = useStyles();\n  const [dataUser, setDataUser] = useState({\n\t\tname: \"\",\n\t\temail: \"\",\n\t\tcomment: \"\"\n\t})\n\n  \n  const [countComment, setCountComment] = useState()\n\n\n  const [users, setUsers] = useState([])\n\n \n  const getUsers = async () => {\n      const response = await axios.get(\n          \"http://localhost:8000/api/komentars\"\n      )\n      console.log(response.data)\n      setCountComment(response.data.length)\n      setUsers(response.data)\n      console.log(countComment)\n  }\n\nconst deleteUser = async (id) => {\n  try {\n    await axios.delete(\n      `https://server-auliarahmanzulfi.herokuapp.com/users/${id}`\n    )\n    getUsers()\n  } catch (err) {\n    console.log(err)\n  }\n}\n\n\n  const postComment = async (e) => {\n      e.preventDefault()\n      try{\n    if (dataUser.name.length === 0) dataUser.name = \"Anonymous\"\n\n          const response = await axios.post(\n              \"http://localhost:8000/api/komentars\",\n              dataUser\n          )   \n          console.log(response.data)\n    window.location.reload()\n      }catch(err){\n          console.log(err)\n      }\n  }\n\n  useEffect(() => {\n      getUsers()\n  }, [])\n  \n  return (\n    \n      <div className={classes.main}>\n          <div className={classes.boxComment}>\n             <h4>Leave a Comment</h4>\n      <form onSubmit={postComment} className={classes.form}>\n        <input\n          className={classes.input}\n          type=\"text\"\n          placeholder=\"Name (Optional)\"\n          value={dataUser.name}\n          onChange={(e) => {\n            setDataUser({ ...dataUser, name: e.target.value })\n          }}\n        />\n        <input\n          className={classes.input}\n          type=\"email\"\n          placeholder=\"Email\"\n          value={dataUser.email}\n          onChange={(e) => {\n            setDataUser({ ...dataUser, email: e.target.value })\n          }}\n          required\n        />\n        <textarea\n          className={classes.textarea}\n          placeholder=\"Message\"\n          value={dataUser.comment}\n          onChange={(e) => {\n            setDataUser({\n              ...dataUser,\n              comment: e.target.value,\n            })\n          }}\n          required\n        />\n        <button type=\"submit\" className={classes.button}>\n          Send\n        </button>\n      </form>\n      <div>\n          <h4>{countComment} Comments</h4>\n          {users.map((user) => (\n            <div className={classes.comment}>\n              <div className={classes.commentUser}>\n                <div className={classes.userInfo}>\n                  <h4>{user.name}</h4>\n                  <p>{user.email}</p>\n                </div>\n              </div>\n              <p>{user.comment}</p>\n            </div>\n          ))}\n        </div>\n   </div>\n   </div>\n  \n  )\n   \n  // )\n}\n\nexport default Contact\n"]},"metadata":{},"sourceType":"module"}